
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://bqnikzglarxcwbtdaqbe.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxbmlremdsYXJ4Y3didGRhcWJlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4ODcwNzEsImV4cCI6MjA1OTQ2MzA3MX0.8D_3fCWgabVRkQ6O4yO8QRmjswxm85DbyKOY2UMvpGM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Export type-safe helper types for table references
export type Tables = Database['public']['Tables']
export type ProductRow = Tables['products']['Row']
export type ProductInsert = Tables['products']['Insert'] 
export type ProductUpdate = Tables['products']['Update']
export type TransactionRow = Tables['transactions']['Row']
export type TransactionInsert = Tables['transactions']['Insert']
export type TransactionUpdate = Tables['transactions']['Update']

// Add imageUrl mapping helper to standardize with our model
export const mapProductRowToProduct = (row: ProductRow) => ({
  id: row.id,
  name: row.name,
  description: row.description || '',
  stockQuantity: row.stock_quantity,
  costPrice: row.cost_price,
  sellPrice: row.sell_price,
  category: row.category,
  lowStockThreshold: row.low_stock_threshold,
  imageUrl: undefined, // The database doesn't have this field
  lastRestocked: row.last_restocked ? new Date(row.last_restocked) : undefined,
  size: row.size ?? undefined,
  ingredients: row.ingredients ?? undefined,
  skinConcerns: row.skin_concerns ?? undefined
});
